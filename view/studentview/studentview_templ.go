// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package studentview

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"github.com/mangustc/obd/schema"
	"github.com/mangustc/obd/schema/studentschema"
	"github.com/mangustc/obd/view"
)

const (
	pageTitle         = "Студенты"
	tableTitle        = pageTitle
	insertFormTitle   = "Студента"
	getPOSTURL        = "/api/student/getstudents"
	insertPOSTURL     = "/api/student/insertstudent"
	editPOSTURL       = "/api/student/editstudent"
	updatePOSTURL     = "/api/student/updatestudent"
	deletePOSTURL     = "/api/student/deletestudent"
	studentTN         = "Student"
	groupTN           = "Group"
	bodyVals          = `{"` + studentTN + `ID": %d}`
	getstudentPOSTURL = "/api/student"
)

var (
	taStudentLastname    = schema.NewTA(studentTN+"Lastname", "Фамилия", schema.StringInput)
	taStudentFirstname   = schema.NewTA(studentTN+"Firstname", "Имя", schema.StringInput)
	taStudentMiddlename  = schema.NewTA(studentTN+"Middlename", "Отчество", schema.StringInput)
	taStudentPhoneNumber = schema.NewTA(studentTN+"PhoneNumber", "Номер телефона", schema.StringInput)
	taGroupID            = schema.NewTA(groupTN+"ID", "Группа", schema.OptionInput)
	taStudentIsHidden    = schema.NewTA(studentTN+"IsHidden", "Скрыт", schema.BooleanInput)
)

func getTableHeaders() []*schema.TableHeaderColumn {
	return []*schema.TableHeaderColumn{
		schema.NewTableHeaderColumn(taStudentLastname.TATitle, 15),
		schema.NewTableHeaderColumn(taStudentFirstname.TATitle, 15),
		schema.NewTableHeaderColumn(taStudentMiddlename.TATitle, 15),
		schema.NewTableHeaderColumn(taStudentPhoneNumber.TATitle, 10),
		schema.NewTableHeaderColumn(taGroupID.TATitle, 10),
		schema.NewTableHeaderColumn(taStudentIsHidden.TATitle, 5),
	}
}

func getInsertFormInputs(groupInputOptions []*schema.InputOption) []*schema.Input {
	return []*schema.Input{
		schema.NewInput(taStudentLastname.TATitle, taStudentLastname.TAName, taStudentLastname.TAInputType, "", nil, nil, ""),
		schema.NewInput(taStudentFirstname.TATitle, taStudentFirstname.TAName, taStudentFirstname.TAInputType, "", nil, nil, ""),
		schema.NewInput(taStudentMiddlename.TATitle, taStudentMiddlename.TAName, taStudentMiddlename.TAInputType, "", nil, nil, ""),
		schema.NewInput(taStudentPhoneNumber.TATitle, taStudentPhoneNumber.TAName, taStudentPhoneNumber.TAInputType, "", nil, nil, ""),
		schema.NewInput(taGroupID.TATitle, taGroupID.TAName, taGroupID.TAInputType, "", nil, groupInputOptions, ""),
	}
}

func getInputsFromStudentDB(studentDB *studentschema.StudentDB, groupInputOptions []*schema.InputOption) []*schema.Input {
	return []*schema.Input{
		schema.NewInput("", taStudentLastname.TAName, taStudentLastname.TAInputType, studentDB.StudentLastname, nil, nil, ""),
		schema.NewInput("", taStudentFirstname.TAName, taStudentFirstname.TAInputType, studentDB.StudentFirstname, nil, nil, ""),
		schema.NewInput("", taStudentMiddlename.TAName, taStudentMiddlename.TAInputType, studentDB.StudentMiddlename, nil, nil, ""),
		schema.NewInput("", taStudentPhoneNumber.TAName, taStudentPhoneNumber.TAInputType, studentDB.StudentPhoneNumber, nil, nil, ""),
		schema.NewInput("", taGroupID.TAName, taGroupID.TAInputType, nil, nil, groupInputOptions, fmt.Sprint(studentDB.GroupID)),
		schema.NewInput("", taStudentIsHidden.TAName, taStudentIsHidden.TAInputType, studentDB.StudentIsHidden, nil, nil, ""),
	}
}

func StudentTableRowEdit(studentDB *studentschema.StudentDB, groupInputOptions []*schema.InputOption) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = view.TableRowEdit(getInputsFromStudentDB(studentDB, groupInputOptions), fmt.Sprintf(bodyVals, studentDB.StudentID), updatePOSTURL, deletePOSTURL).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func StudentTableRow(studentDB *studentschema.StudentDB, groupInputOptions []*schema.InputOption) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = view.TableRow(getInputsFromStudentDB(studentDB, groupInputOptions), fmt.Sprintf(bodyVals, studentDB.StudentID), editPOSTURL, deletePOSTURL).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func StudentTableRows(studentsDB []*studentschema.StudentDB, groupInputOptions []*schema.InputOption) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		for _, studentDB := range studentsDB {
			templ_7745c5c3_Err = StudentTableRow(studentDB, groupInputOptions).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return templ_7745c5c3_Err
	})
}

func Student(groupInputOptions []*schema.InputOption) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = view.InsertForm(insertFormTitle, insertPOSTURL, getInsertFormInputs(groupInputOptions)).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = view.Table(tableTitle, getPOSTURL, getTableHeaders()).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func StudentPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var6 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div hx-post=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(getstudentPOSTURL)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `view/studentview/studentview.templ`, Line: 88, Col: 30}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-target=\"this\" hx-swap=\"outerHTML\" hx-trigger=\"load\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = view.Layout(pageTitle).Render(templ.WithChildren(ctx, templ_7745c5c3_Var6), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
